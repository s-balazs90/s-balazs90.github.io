* {
    margin: 0px;
    padding: 0px;
    box-sizing: content-box;

}

body {
    background-color: lightblue;
}

/*hover.css
.hvr-grow {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: transform;
  transition-property: transform;
}
.hvr-grow:hover, .hvr-grow:focus, .hvr-grow:active {
  -webkit-transform: scale(1.1);
  transform: scale(1.1);
}

hover.css*/

#container {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(5, 1fr);
    column-gap: 40px;
    height: 100%;
    width: 100%;
    padding: 10px;
    justify-content: space-between;
}

div#container a {
    padding: 0px;
}

#navbar {
    grid-column: 1 / 7;
}


#about {
    grid-row: span 3 / span 3;
    grid-column-start: 2;
    grid-row-start: 2;
}

#cast {
    grid-row: span 3 / span 3;
    grid-column-start: 3;
    grid-row-start: 2;
}

#gallery {
    grid-row: span 3 / span 3;
    grid-column-start: 4;
    grid-row-start: 2;
}

#awards {
    grid-row: span 3 / span 3;
    grid-column-start: 5;
    grid-row-start: 2;
}

#footer {
    grid-column: span 6 / span 6;
    grid-row-start: 5;
}

/*menu*/
nav ul {
    margin: 50px auto 0;
    padding: 0;
    list-style: none;
    display: table;
    width: 600px;
    text-align: center;
}

li {
    display: table-cell;

    padding: 15px 0;
}

li a {
    color: #000000;
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 0.15em;

    display: inline-block;
    padding: 15px 20px;

}

li a:after {
    background: none repeat scroll 0 0 transparent;
    bottom: 0;
    content: "";
    display: block;
    height: 2px;
    left: 50%;
    position: absolute;
    background: #fff;
    transition: width 0.3s ease 0s, left 0.3s ease 0s;
    width: 0;
}

li a:hover:after {
    width: 100%;
    left: 0;
}

@media screen and (max-height: 300px) {
    ul {
        margin-top: 40px;
    }
}

/*menu-end*/

/*responsive-menu*/

.topnav .icon {
    display: none;
}

@media screen and (max-width: 600px) {
    .topnav a:not(:first-child) {
        display: none;
    }

    .topnav a.icon {
        float: right;
        display: block;
    }
}

@media screen and (max-width: 600px) {
    .topnav.responsive {
        position: relative;
    }

    .topnav.responsive .icon {
        position: absolute;
        right: 0;
        top: 0;
    }

    .topnav.responsive a {
        float: none;
        display: block;
        text-align: left;
    }
}

/*responsive-menu end*/

.active {
    border: 2px solid black;
    background-color: rgb(247, 242, 242);
}

header {
    margin-top: 55px;
    text-align: center;
}

footer {
    clear: both;
    padding: 28px;
    background-color: lightblue;
    text-align: center;
}


article {
    padding: 100px;
}

.article-padding {
    padding: 0;
}

a:link {
    text-decoration: none;
}

/*about-stlye*/
#rounds-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 5vw);
    gap: 5px;
}

#column-1 {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 1;
    grid-row-end: 3;
}

#column-2 {
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 3;
}

#column-3 {
    grid-column-start: 3;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 3;
}

#column-4 {
    grid-column-start: 4;
    grid-column-end: 5;
    grid-row-start: 1;
    grid-row-end: 3;
}

#column-former {
    grid-column-start: 1;
    grid-column-end: 5;
    grid-row-start: 4;
    grid-row-end: 5;
}

/*responsive-about*/
@media only screen and (max-width:600px) {
    #rounds-grid {
        display: block;
    }
}


/*responsive-index*/
@media only screen and (max-width:600px) {
    #container {
        display: block;
        justify-content: center;
    }

}

/*cast-style*/
.cast {
    margin-top: 25px;
    float: left;
    width: 27.33%;
    padding: 5px;
}

div.guests {
    clear: both;
    padding: 10px;
}

/*gallery-style*/
.gallery-grid {
    display: grid;
    grid-template-columns: repeat(11, 1fr);
    grid-template-rows: repeat(8, 5vw);
    gap: 5px;
}

.gallery-img {
    padding: 5px;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

#image-1 {
    grid-column-start: 1;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 3;
}

#image-2 {
    grid-column-start: 3;
    grid-column-end: 5;
    grid-row-start: 1;
    grid-row-end: 3;
}

#image-3 {
    grid-column-start: 5;
    grid-column-end: 8;
    grid-row-start: 1;
    grid-row-end: 3;
}

#image-4 {
    grid-column-start: 8;
    grid-column-end: 10;
    grid-row-start: 1;
    grid-row-end: 3;
}

#image-5 {
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 3;
    grid-row-end: 7;
}

#image-6 {
    grid-column-start: 10;
    grid-column-end: 12;
    grid-row-start: 1;
    grid-row-end: 4;
}

#image-7 {
    grid-column-start: 10;
    grid-column-end: 12;
    grid-row-start: 4;
    grid-row-end: 6;
}

#image-8 {
    grid-column-start: 7;
    grid-column-end: 10;
    grid-row-start: 3;
    grid-row-end: 6;
}

#image-9 {
    grid-column-start: 4;
    grid-column-end: 7;
    grid-row-start: 5;
    grid-row-end: 9;
}

#image-10 {
    grid-column-start: 7;
    grid-column-end: 10;
    grid-row-start: 6;
    grid-row-end: 9;
}

#image-11 {
    grid-column-start: 10;
    grid-column-end: 12;
    grid-row-start: 6;
    grid-row-end: 9;
}

#image-12 {
    grid-column-start: 4;
    grid-column-end: 7;
    grid-row-start: 3;
    grid-row-end: 5;
}

#image-13 {
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 7;
    grid-row-end: 9;
}

/*gallery-style end*/

/*responsive-gallery*/
@media only screen and (max-width:600px) {
    .gallery-grid {
        display: block;
    }
}

/*responsive-gallery-end*/

/*awards-style*/
section {
    margin: 0 auto;
    width: 60%;
}

table {
    padding: 10px;
    margin: 20px 0;
    width: 100%;
    background-color: lightgray;
}

#cast {
    border-collapse: collapse;
}

.head {
    background-color: rgb(241, 224, 183);
}

td:hover {
    background-color: rgb(143, 193, 209);
}

td {
    background-color: whitesmoke;
}

.no-win {
    background-color: rgb(233, 182, 182);
}

.yes-win {
    background-color: rgb(208, 240, 201);
}


/*codepen-style*/
img {
    max-width: 100%;
}

/* Hide radio buttons */
input[type="radio"] {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}


.cards {
    --img-w: 200px;
    --duration: 300ms;
    --img-easing: cubic-bezier(0.34, 1.56, 0.64, 1);
    width: min(100% - 4rem, 800px);
    margin-inline: auto;
    display: grid;

    counter-reset: my-counter;
}

.card {
    --cards-grid-cols: auto;
    --cards-grid-rows: var(--img-w) auto;
    --cards-grid-gap: 2rem;
    --cards-footer-justify: center;

    grid-area: 1/1;
    display: grid;
    place-items: center;
    grid-template-columns: var(--cards-grid-cols);
    grid-template-rows: var(--cards-grid-rows);
    gap: var(--cards-grid-gap);

}

@media (600px < width) {
    .card {
        --cards-grid-cols: var(--img-w) auto;
        --cards-grid-rows: auto;
        --cards-grid-gap: 4rem;
        --cards-footer-justify: start;
    }
}


.card-img {
    width: 200px;
    height: 200px;
    aspect-ratio: 1 / 1;
    rotate: var(--angle, 0deg);
    border-radius: 10px;
    border: 3px solid #FFF;
    overflow: hidden;
    transform-origin: center;
    object-fit: cover;
    box-shadow: 0 0 5px 3px rgba(0 0 0 / .05);
}



input:nth-of-type(1):checked+.card~.card>.card-img {
    animation: straighten-img-1 calc(var(--duration) * 2) forwards;
    animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(2):checked)>.card-img,
input:nth-of-type(2):checked+.card~.card>.card-img {
    animation: straighten-img-2 calc(var(--duration) * 2) forwards;
    animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(3):checked)>.card-img,
input:nth-of-type(3):checked+.card~.card>.card-img {
    animation: straighten-img-3 calc(var(--duration) * 2) forwards;
    animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(4):checked)>.card-img,
input:nth-of-type(4):checked+.card~.card>.card-img {
    animation: straighten-img-4 calc(var(--duration) * 2) forwards;
    animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(5):checked)>.card-img,
input:nth-of-type(5):checked+.card~.card>.card-img {
    animation: straighten-img-5 calc(var(--duration) * 2) forwards;
    animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(6):checked)>.card-img,
input:nth-of-type(6):checked+.card~.card>.card-img {
    animation: straighten-img-6 calc(var(--duration) * 2) forwards;
    animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(7):checked)>.card-img,
input:nth-of-type(7):checked+.card~.card>.card-img {
    animation: straighten-img-7 calc(var(--duration) * 2) forwards;
    animation-timing-function: var(--img-easing);
}

/* as CSS can't remove animations, we change the animation according to which checkbox is checked  - all animations are the same (would be simpler with SCSS) */
@keyframes straighten-img-1 {
    50% {
        --angle: 0deg;
    }
}

@keyframes straighten-img-2 {
    50% {
        --angle: 0deg;
    }
}

@keyframes straighten-img-3 {
    50% {
        --angle: 0deg;
    }
}

@keyframes straighten-img-4 {
    50% {
        --angle: 0deg;
    }
}

@keyframes straighten-img-5 {
    50% {
        --angle: 0deg;
    }
}

@keyframes straighten-img-6 {
    50% {
        --angle: 0deg;
    }
}

@keyframes straighten-img-7 {
    50% {
        --angle: 0deg;
    }
}


/* stacking order - these are updated according to which card is selected */
.card {
    z-index: -1;
}

input:checked+.card {
    z-index: 10 !important;
}

/* next card checked - place behind */
.card:has(+input:checked) {
    z-index: 9;
}

/* next card +1 checked - place behind */
.card:has(+input + .card + input:checked) {
    z-index: 8;
}

/* next card +2 checked - place behind */
.card:has(+input + .card +input + .card + input:checked) {
    z-index: 7;
}

/* next card +3 checked - place behind */
.card:has(+input + .card +input + .card +input + .card + input:checked) {
    z-index: 6;
}

/* next card +4 checked - place behind */
.card:has(+input + .card +input + .card +input + .card +input + .card + input:checked) {
    z-index: 5;
}

/* next card +5 checked - place behind */
.card:has(+input + .card +input + .card +input +input + .card +input + .card +input + .card + input:checked) {
    z-index: 4;
}

/* next card +6 checked - place behind */
.card:has(+input + .card +input + .card +input + .card +input +input + .card +input + .card +input + .card + input:checked) {
    z-index: 3;
}

.card-data {
    display: grid;
    gap: 1rem;
}

.card-data>.card-num {
    opacity: var(--data-opacity, 0);
    font-size: .8rem;
    color: #666;
}

.card-data>p {
    font-size: 0.9rem;

}

.card-data>h2,
.card-data>p {
    transition: var(--duration) ease-in-out;
    transition-delay: var(--data-delay, 0ms);
    opacity: var(--data-opacity, 0);
    translate: 0 var(--data-y, 20px);
}

.card-data>footer {
    display: flex;
    justify-content: var(--cards-footer-justify);
    gap: 2rem;
}

.card-data>footer label {
    margin-block-start: auto;
    cursor: pointer;
    pointer-events: var(--card-events, none);
    opacity: var(--data-opacity, 0);
    transition: color var(--duration) ease-in-out;
    color: var(--label-clr-txt, #000);
    background-color: var(--label-clr-bg, #EEE);
    border-radius: 50%;
    width: 32px;
    height: 32px;
    aspect-ratio: 1/1;
    display: grid;
    place-content: center;
    transition: background-color 300ms ease-in-out, color 300ms ease-in-out;
}


input:checked:focus-visible+.card>.card-data>footer label,
.card-data>footer label:hover {
    --label-clr-txt: #FFF;
    --label-clr-bg: steelblue;
}

input:checked+.card {
    --data-opacity: 1;
    --data-y: 0;
    --data-delay: var(--duration);
    --card-events: auto;
    transition: z-index;
    transition-delay: 300ms;
    /*z-index: 1;*/
}

input:checked+.card>.card-img {
    animation: reveal-img calc(var(--duration) * 2) forwards;
}

@keyframes reveal-img {
    50% {
        translate: -150% 0;
        --angle: 0deg;
    }
}